{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data: () => ({\n    type: 'month',\n    types: ['month', 'week', 'day', '4day'],\n    mode: 'stack',\n    modes: ['stack', 'column'],\n    weekday: [0, 1, 2, 3, 4, 5, 6],\n    weekdays: [{\n      text: 'Sun - Sat',\n      value: [0, 1, 2, 3, 4, 5, 6]\n    }, {\n      text: 'Mon - Sun',\n      value: [1, 2, 3, 4, 5, 6, 0]\n    }, {\n      text: 'Mon - Fri',\n      value: [1, 2, 3, 4, 5]\n    }, {\n      text: 'Mon, Wed, Fri',\n      value: [1, 3, 5]\n    }],\n    value: '',\n    events: [],\n    colors: ['blue', 'indigo', 'deep-purple', 'cyan', 'green', 'orange', 'grey darken-1'],\n    names: ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party']\n  }),\n  methods: {\n    getEvents({\n      start,\n      end\n    }) {\n      const events = [];\n      const min = new Date(`${start.date}T00:00:00`);\n      const max = new Date(`${end.date}T23:59:59`);\n      const days = (max.getTime() - min.getTime()) / 86400000;\n      const eventCount = this.rnd(days, days + 20);\n      for (let i = 0; i < eventCount; i++) {\n        const allDay = this.rnd(0, 3) === 0;\n        const firstTimestamp = this.rnd(min.getTime(), max.getTime());\n        const first = new Date(firstTimestamp - firstTimestamp % 900000);\n        const secondTimestamp = this.rnd(2, allDay ? 288 : 8) * 900000;\n        const second = new Date(first.getTime() + secondTimestamp);\n        events.push({\n          name: this.names[this.rnd(0, this.names.length - 1)],\n          start: first,\n          end: second,\n          color: this.colors[this.rnd(0, this.colors.length - 1)],\n          timed: !allDay\n        });\n      }\n      this.events = events;\n    },\n    getEventColor(event) {\n      return event.color;\n    },\n    rnd(a, b) {\n      return Math.floor((b - a + 1) * Math.random()) + a;\n    }\n  }\n};","map":{"version":3,"mappings":";AA2DA;EACAA;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC,WACA;MAAAC;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,GACA;MAAAD;MAAAC;IAAA,EACA;IACAA;IACAC;IACAC;IACAC;EACA;EACAC;IACAC;MAAAC;MAAAC;IAAA;MACA;MAEA;MACA;MACA;MACA;MAEA;QACA;QACA;QACA;QACA;QACA;QAEAN;UACAO;UACAF;UACAC;UACAE;UACAC;QACA;MACA;MAEA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["data","type","types","mode","modes","weekday","weekdays","text","value","events","colors","names","methods","getEvents","start","end","name","color","timed","getEventColor","rnd"],"sourceRoot":"src/components","sources":["CalendarComponents.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <v-app id=\"inspire\">\n      <div>\n        <v-sheet tile height=\"54\" class=\"d-flex\">\n          <v-btn icon class=\"ma-2\" @click=\"$refs.calendar.prev()\">\n            <v-icon>mdi-chevron-left</v-icon>\n          </v-btn>\n          <v-select\n            v-model=\"type\"\n            :items=\"types\"\n            dense\n            outlined\n            hide-details\n            class=\"ma-2\"\n            label=\"type\"\n          ></v-select>\n          <v-select\n            v-model=\"mode\"\n            :items=\"modes\"\n            dense\n            outlined\n            hide-details\n            label=\"event-overlap-mode\"\n            class=\"ma-2\"\n          ></v-select>\n          <v-select\n            v-model=\"weekday\"\n            :items=\"weekdays\"\n            dense\n            outlined\n            hide-details\n            label=\"weekdays\"\n            class=\"ma-2\"\n          ></v-select>\n          <v-spacer></v-spacer>\n          <v-btn icon class=\"ma-2\" @click=\"$refs.calendar.next()\">\n            <v-icon>mdi-chevron-right</v-icon>\n          </v-btn>\n        </v-sheet>\n        <v-sheet height=\"600\">\n          <v-calendar\n            ref=\"calendar\"\n            v-model=\"value\"\n            :weekdays=\"weekday\"\n            :type=\"type\"\n            :events=\"events\"\n            :event-overlap-mode=\"mode\"\n            :event-overlap-threshold=\"30\"\n            :event-color=\"getEventColor\"\n            @change=\"getEvents\"\n          ></v-calendar>\n        </v-sheet>\n      </div>\n    </v-app>\n  </div>\n</template>\n\n<script>\n  export default {\n    data: () => ({\n      type: 'month',\n      types: ['month', 'week', 'day', '4day'],\n      mode: 'stack',\n      modes: ['stack', 'column'],\n      weekday: [0, 1, 2, 3, 4, 5, 6],\n      weekdays: [\n        { text: 'Sun - Sat', value: [0, 1, 2, 3, 4, 5, 6] },\n        { text: 'Mon - Sun', value: [1, 2, 3, 4, 5, 6, 0] },\n        { text: 'Mon - Fri', value: [1, 2, 3, 4, 5] },\n        { text: 'Mon, Wed, Fri', value: [1, 3, 5] },\n      ],\n      value: '',\n      events: [],\n      colors: ['blue', 'indigo', 'deep-purple', 'cyan', 'green', 'orange', 'grey darken-1'],\n      names: ['Meeting', 'Holiday', 'PTO', 'Travel', 'Event', 'Birthday', 'Conference', 'Party'],\n    }),\n    methods: {\n      getEvents ({ start, end }) {\n        const events = []\n\n        const min = new Date(`${start.date}T00:00:00`)\n        const max = new Date(`${end.date}T23:59:59`)\n        const days = (max.getTime() - min.getTime()) / 86400000\n        const eventCount = this.rnd(days, days + 20)\n\n        for (let i = 0; i < eventCount; i++) {\n          const allDay = this.rnd(0, 3) === 0\n          const firstTimestamp = this.rnd(min.getTime(), max.getTime())\n          const first = new Date(firstTimestamp - (firstTimestamp % 900000))\n          const secondTimestamp = this.rnd(2, allDay ? 288 : 8) * 900000\n          const second = new Date(first.getTime() + secondTimestamp)\n\n          events.push({\n            name: this.names[this.rnd(0, this.names.length - 1)],\n            start: first,\n            end: second,\n            color: this.colors[this.rnd(0, this.colors.length - 1)],\n            timed: !allDay,\n          })\n        }\n\n        this.events = events\n      },\n      getEventColor (event) {\n        return event.color\n      },\n      rnd (a, b) {\n        return Math.floor((b - a + 1) * Math.random()) + a\n      },\n    },\n  }\n</script>"]},"metadata":{},"sourceType":"module"}